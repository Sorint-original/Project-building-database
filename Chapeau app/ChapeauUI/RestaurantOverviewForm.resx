<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AiHC5njz5v9MNWd8y8O/YQAAAABJRU5ErkJggg==
</value>
  </data>
</root>